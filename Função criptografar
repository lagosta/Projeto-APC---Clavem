#include <stdlib.h>
#include <stdio.h>

int criptografar(char*, char**, int);


int main()
{
	char senhaM[10];
	char **campo;
	int imageE;
	int i, j;
	campo = (char**) malloc(5*sizeof(char*));
	for (i=0; i<5; i++)
	{
		campo[i] = (char*) malloc(10*sizeof(char));
	}
	
	printf("senha: ");
	gets(senhaM);
	for (i=0; i<5; i++)
	{
		printf("campo %d: ", i);
		gets(campo[i]);
	}
	printf("imagem (1, 2, 3 ou 4): ");
	scanf("%d", &imageE);
	
	
	criptografar(senhaM, campo, imageE);
	
	return 0;
}


int criptografar(char *senha, char **campo, int imagem)
{
	int tamanho_senha = 0, maior_letra = 0, menor_letra = 255, soma = 0, contador_char = 0; //<<contar caracteres a criptografar; 
	int *posicao_senha, posicao_campo[5/*n_campo*/][10/*n_tamcampo*/], tam_campo[5/*n_campo*/]; //guardar junto da senha pra saber até onde descriptografar
	int i, j, nova_posicao, ultima_posicao, posicao_contador[5], valor_contador[5];
	int final_img, copiar, posicao_tamanho_senha, tamanho_senha_crip;
	FILE *img_original, *img_copia;
	
	//achar tamanho da senha
	while (senha[tamanho_senha] != '\0')
	{
		tamanho_senha++;
	}
	posicao_senha = (int*) malloc(tamanho_senha*sizeof(int));
	
	//achar maior e menor caracteres da senha
	for (i=0; i<tamanho_senha; i++)
	{
		if (maior_letra < senha[i])
		{
			maior_letra = senha[i];
		}
		if (menor_letra > senha[i])
		{
			menor_letra = senha[i];
		}
		soma += senha[i];
	}
	
	//mudar valor dos caracteres da senha e posições na imagem
	nova_posicao = tamanho_senha*(maior_letra-menor_letra) + soma;
	posicao_tamanho_senha = nova_posicao + 15;
	for (i=0; i<tamanho_senha; i++)
	{
		if (i == 0)
		{
			posicao_senha[i] = nova_posicao;
		}
		else
		{
			posicao_senha[i] = posicao_senha[i-1] + nova_posicao;
		}
		
		senha[i] = senha[i] + (i+3) - menor_letra;
	}
	
	//achar tamanho de cada campo preenchido
	for (i=0; i<5/*n_campo*/; i++)
	{
		tam_campo[i] = 0;
		while (campo[i][tam_campo[i]] != '\0')
		{
			tam_campo[i]++;
			contador_char++;
		}
	}
	
	//quantidade de caracteres preenchidos
	ultima_posicao = posicao_senha[tamanho_senha-1];
	for (i=0; i<5; i++)
	{
		if (contador_char >= 255)
		{
			valor_contador[i] = 255 - menor_letra + tamanho_senha;
			contador_char -= (255 - menor_letra + tamanho_senha);
		}
		else if (contador_char > 0 && contador_char < 255)
		{
			valor_contador[i] = contador_char;
			contador_char = 0;
		}
		else
		{
			valor_contador[i] = 0;
		}
		posicao_contador[i] = ultima_posicao + nova_posicao;
		ultima_posicao = posicao_contador[i];
	}
	
	//mudar valor e posição dos caracteres de cada campo
	for (i=0; i<5/*n_campo*/; i++)
	{
		for (j=0; j<tam_campo[i]; j++)
		{
			posicao_campo[i][j] = ultima_posicao + nova_posicao;
			ultima_posicao = posicao_campo[i][j];
			campo[i][j] = campo[i][j] + (menor_letra + maior_letra)/10;
		}
	}
	
	//**************IMAGEM****************
	
	switch (imagem)
	{
		case 1:
			img_original = fopen("img1.bmp", "r");
			break;
		case 2:
			img_original = fopen("img2.bmp", "r");
			break;
		case 3:
			img_original = fopen("img3.bmp", "r");
			break;
		case 4:
			img_original = fopen("img4.bmp", "r");
			break;
	}
	
	//tamanho da img
	fseek(img_original, 2, SEEK_SET);
 	fread(&final_img, 4, 1, img_original);
	
	//criar cópia da imagem pra fazer alterações
	img_copia = fopen("Imagem criptografada.bmp", "w");
	for (i=0; i<final_img; i++)
	{
		fseek(img_original, i, SEEK_SET);
		fread(&copiar, 1, 1, img_original);
		fseek(img_copia, i, SEEK_SET);
		fwrite(&copiar, 1, 1, img_copia);
	}
	
	//guardar senha
	tamanho_senha_crip = tamanho_senha + (maior_letra-menor_letra);
	fseek(img_copia, posicao_tamanho_senha, SEEK_SET);
	fwrite(&tamanho_senha_crip, 1, 1, img_copia);
	for (i=0; i<tamanho_senha; i++)
	{
		fseek(img_copia, posicao_senha[i], SEEK_SET);
		fwrite(&senha[i], 1, 1, img_copia);
	}
	
	//guardar qtd caracteres
	for (i=0; i<5; i++)
	{
		fseek(img_copia, posicao_contador[i], SEEK_SET);
		fwrite(&valor_contador[i], 1, 1, img_copia);
	}
	
	//guardar caracteres
	for (i=0; i<5/*n_campo*/; i++)
	{
		for (j=0; j<tam_campo[i]; j++)
		{	
			fseek(img_copia, posicao_campo[i][j], SEEK_SET);
			fwrite(&campo[i][j], 1, 1, img_copia);
		}
	}
	
	fclose(img_original);
	fclose(img_copia);
	system("PAUSE");
	return 0;
}
